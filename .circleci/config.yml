# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
workflows:
  test-env-vars:
    jobs:
      - build-gin:
          context: dockerhub
      - build-next:
          context: dockerhub
      - update-manifest:
          context: dockerhub
          requires:
            - build-gin
            - build-next
          filters:
            branches:
              only:
                main

references:
  docker_hub_authentication: &docker_hub_authentication
    auth:
      username: $DOCKERHUB_USER
      password: $DOCKERHUB_PASSWORD

jobs:
  build-gin:
    docker:
      - image: circleci/golang:1.15.8
        <<: *docker_hub_authentication
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USER --password-stdin
      - run:
          name: Build Image
          command: docker build -f gin/Dockerfile . --tag $DOCKERHUB_REPO:go-gin$CIRCLE_BUILD_NUM --no-cache
      - run:
          name: Push Image
          command: docker push $DOCKERHUB_REPO:go-gin$CIRCLE_BUILD_NUM

  build-next:
    docker:
      - image: circleci/golang:1.15.8
        <<: *docker_hub_authentication
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Docker Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USER --password-stdin
      - run:
          name: Build Image
          command: docker build -f next/Dockerfile . --tag $DOCKERHUB_REPO:node-next$CIRCLE_BUILD_NUM --no-cache
      - run:
          name: Push Image
          command: docker push $DOCKERHUB_REPO:node-next$CIRCLE_BUILD_NUM

  update-manifest:
    docker:
      - image: circleci/golang:1.15.8
        <<: *docker_hub_authentication
    steps:
      - checkout
      - run:
          name: Setting Github Config
          command: |
            git config --global user.name  "munvei"
            git config --global user.email "yoichi.nagamoto@gmail.com"
      - add_ssh_keys:
          fingerprints:
            - "<fingerprints>"
      - run:
          name: Clone Manifests REPO 
          command: |
            git clone git@github.com:munvei/eem-manifests.git
      - run:
          name: Install yq
          command: |
            export VERSION=v4.14.1 && export BINARY=yq_linux_amd64
            wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && sudo mv ${BINARY} /usr/bin/yq
      - run:
          name: Edit Manifests
          command: |
            cd eem-manifests/manifests
            git checkout -B update-image-tag-$CIRCLE_BUILD_NUM
            yq eval -i ".spec.template.spec.containers[0].image=\"$DOCKERHUB_REPO:go-gin$CIRCLE_BUILD_NUM\"" go-gin-deploy.yaml 
            yq eval -i ".spec.template.spec.containers[0].image=\"$DOCKERHUB_REPO:node-next$CIRCLE_BUILD_NUM\"" node-next-deploy.yaml 
      - run:
          name: Commit And Push This Changes
          command: |
            cd eem-manifests
            git add manifests/.
            git commit -m "update image tag"
            git push origin update-image-tag-$CIRCLE_BUILD_NUM

#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     docker:
#       - image: circleci/golang:1.15.8
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - go-mod-v4-{{ checksum "go.sum" }}
#       - run:
#           name: Install Dependencies
#           command: go mod download
#       - save_cache:
#           key: go-mod-v4-{{ checksum "go.sum" }}
#           paths:
#             - "/go/pkg/mod"
#       - run:
#           name: Run tests
#           command: |
#             mkdir -p /tmp/test-reports
#             gotestsum --junitfile /tmp/test-reports/unit-tests.xml
#       - store_test_results:
#           path: /tmp/test-reports

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#     # Inside the workflow, you define the jobs you want to run.
#     jobs:
#       - build
